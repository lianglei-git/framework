package main

import (
	"fmt"
	"unit-auth/models"

	"gorm.io/driver/mysql"
	"gorm.io/gorm"
	"gorm.io/gorm/logger"
)

func main() {
	fmt.Println("🔍 调试数据库连接...")

	// 测试多种数据库连接配置
	configs := []string{
		"root:@tcp(localhost:3306)/unit_auth?charset=utf8mb4&parseTime=True&loc=Local",
		"unit_auth:unit_auth_password@tcp(localhost:3306)/unit_auth?charset=utf8mb4&parseTime=True&loc=Local",
		"root:123456@tcp(localhost:3306)/unit_auth?charset=utf8mb4&parseTime=True&loc=Local",
	}

	for i, dsn := range configs {
		fmt.Printf("\n📍 测试配置 %d: %s\n", i+1, dsn)

		db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{
			Logger: logger.Default.LogMode(logger.Silent),
		})

		if err != nil {
			fmt.Printf("   ❌ 连接失败: %v\n", err)
			continue
		}

		// 检查Refresh Token表
		var count int64
		if err := db.Model(&models.RefreshToken{}).Count(&count).Error; err != nil {
			fmt.Printf("   ⚠️  Refresh Token表不存在或查询失败: %v\n", err)

			// 尝试创建表
			fmt.Printf("   🔄 尝试创建Refresh Token表...\n")
			if err := db.AutoMigrate(&models.RefreshToken{}); err != nil {
				fmt.Printf("   ❌ 创建表失败: %v\n", err)
			} else {
				fmt.Printf("   ✅ Refresh Token表创建成功\n")
			}
		} else {
			fmt.Printf("   ✅ Refresh Token表存在，记录数: %d\n", count)
		}

		// 显示表列表
		fmt.Printf("   📋 数据库表列表:\n")
		rows, err := db.Raw("SHOW TABLES").Rows()
		if err != nil {
			fmt.Printf("   ❌ 获取表列表失败: %v\n", err)
			continue
		}
		defer rows.Close()

		tables := 0
		for rows.Next() {
			var tableName string
			if err := rows.Scan(&tableName); err != nil {
				continue
			}
			fmt.Printf("     - %s\n", tableName)
			tables++
		}

		if tables > 0 {
			fmt.Printf("   ✅ 找到 %d 个表\n", tables)
			fmt.Printf("   🎯 推荐使用配置 %d\n", i+1)
			break
		} else {
			fmt.Printf("   ❌ 数据库中没有表\n")
		}
	}

	fmt.Println("\n📋 建议的解决步骤:")
	fmt.Println("1. 确保MySQL服务正在运行")
	fmt.Println("2. 创建数据库: CREATE DATABASE unit_auth;")
	fmt.Println("3. 创建用户: CREATE USER 'unit_auth'@'%' IDENTIFIED BY 'unit_auth_password';")
	fmt.Println("4. 授权: GRANT ALL PRIVILEGES ON unit_auth.* TO 'unit_auth'@'%';")
	fmt.Println("5. 刷新: FLUSH PRIVILEGES;")
	fmt.Println("6. 运行: go run main.go")
}
