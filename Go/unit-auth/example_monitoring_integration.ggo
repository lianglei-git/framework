package main

import (
	"log"
	"unit-auth/models"
	"unit-auth/router"
	"unit-auth/services"

	"github.com/gin-gonic/gin"
	"gorm.io/driver/mysql"
	"gorm.io/gorm"
)

func main() {
	// 初始化数据库连接
	dsn := "user:password@tcp(localhost:3306)/unit_auth?charset=utf8mb4&parseTime=True&loc=Local"
	db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{})
	if err != nil {
		log.Fatal("Failed to connect to database:", err)
	}

	// 自动迁移数据库表
	err = db.AutoMigrate(
		&models.User{},
		&models.Metric{},
		&models.MetricValue{},
		&models.AlertRule{},
		&models.Alert{},
		&models.Notification{},
		&models.NotificationTemplate{},
		&models.SystemHealth{},
		&models.PerformanceLog{},
	)
	if err != nil {
		log.Fatal("Failed to migrate database:", err)
	}

	// 创建监控服务
	monitoringService := services.NewMonitoringService(db)

	// 创建Gin路由器
	r := gin.Default()

	// 设置监控路由
	router.SetupMonitoringRoutes(r, monitoringService)

	// 启动服务器
	log.Println("Starting server on :8080")
	log.Println("Prometheus metrics available at: http://localhost:8080/metrics")
	log.Println("Monitoring API available at: http://localhost:8080/api/monitoring")

	if err := r.Run(":8080"); err != nil {
		log.Fatal("Failed to start server:", err)
	}
}
